
evaluationDependsOn(":emby-lib")
evaluationDependsOn(':plexapp-rest-library')
evaluationDependsOn(':subtitle-converter')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-allopen"
apply plugin: "jacoco"
apply plugin: 'org.sonarqube'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.organization", "kingargyle-github"
    property "sonar.login", "cb7af08f0b0e86306ac5365074326dc27aba503e"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/testDebugUnitTest.exec"
//    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    property "sonar.coverage.exclusions", "**/R.class, **/R\$*.class, **/BuildConfig.*, **/Manifest*.*, **/*Test*.*,android/**/*.*, **/*MemberInjector.*, **/*\$\$Factory*.*, **/*..State*.*, **/*_ViewBinding*.*"
  }
}

allOpen {
  annotation("us.nineworlds.serenity.common.annotations.OpenForTesting")
}

android {
  defaultConfig {
    versionCode 2010000
    versionName "2.1.0-M3"
    minSdkVersion 22
    targetSdkVersion 31
    multiDexEnabled true
    multiDexKeepProguard file("multidex_keep_file.txt")

    vectorDrawables.useSupportLibrary = true

  }

  aaptOptions {
    cruncherEnabled false
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
  }

  compileSdkVersion 31
  testOptions.unitTests.includeAndroidResources = true

  if (project.hasProperty("keystore")) {
    signingConfigs {
      release {
        storeFile file(project.property("keystore"))
        storePassword project.property("storepass")
        keyAlias project.property("keyalias")
        keyPassword project.property("keypass")
      }
    }
  }

  targetCompatibility = '1.8'
  sourceCompatibility = '1.8'

  buildTypes {
    debug {
      minifyEnabled false
      testCoverageEnabled false
    }
    release {
      if (project.hasProperty("keystore")) {
        signingConfig signingConfigs.release
      }
      zipAlignEnabled true
      minifyEnabled false
    }
  }

  lintOptions {
    checkReleaseBuilds false
    // Or, if you prefer, you can continue to check for errors in release builds,
    // but continue the build even when errors are found:
    abortOnError false
  }

  testOptions {
    unitTests.returnDefaultValues = true
    unitTests.includeAndroidResources = true
    unitTests.all {
      minHeapSize = "1024m"
      maxHeapSize = "1512m"
      forkEvery = 100
      maxParallelForks = 2

      jvmArgs '-noverify'

      testLogging {
        exceptionFormat "full"
      }
    }
  }

  compileOptions {
    incremental = true
    targetCompatibility 1.8
    sourceCompatibility 1.8
  }

  dexOptions {
    preDexLibraries = false
  }
}

dependencies {

  implementation project(':plexapp-rest-library')
  implementation project(':subtitle-converter')
  implementation project(':emby-lib')
  implementation project(':serenity-android-common')
  implementation project(':serenity-common')

  implementation("androidx.recyclerview:recyclerview:1.2.1") {
    version {
      strictly "1.2.1"
    }
  }

  implementation 'com.google.firebase:firebase-analytics:17.5.0'
  implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

  implementation group: 'com.github.bumptech.glide', name: 'okhttp3-integration', version: "$glideOkHttpVersion"
  implementation("com.google.android.exoplayer:exoplayer-core:$exoplayerVersion") {
    exclude module: 'support-annotations'
  }
  implementation("com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion") {
    exclude module: 'support-annotations'
  }

  implementation("com.google.android.exoplayer:extension-okhttp:$exoplayerVersion") {
    exclude module: 'support-annotations'
  }

  implementation("com.squareup.okhttp3:okhttp:$okhttpVersion") {
    exclude group: 'com.android.support'
  }

  implementation 'com.google.android.material:material:1.4.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  implementation "com.github.moxy-community:moxy:$moxyVersion"
  implementation "com.github.moxy-community:moxy-app-compat:$moxyVersion"
  implementation "com.github.bumptech.glide:glide:$glideVersion"
  kapt "com.github.bumptech.glide:compiler:$glideVersion"
  implementation "org.greenrobot:eventbus:$eventBus"
  implementation "com.birbit:android-priority-jobqueue:$androidPriorityJobQueueVersion"
  implementation "androidx.appcompat:appcompat:1.3.1"
  implementation "androidx.leanback:leanback:1.1.0-rc02"
  implementation "androidx.leanback:leanback-preference:1.1.0-rc01"
  implementation "androidx.legacy:legacy-support-v4:1.0.0"
  implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
  implementation "androidx.percentlayout:percentlayout:1.0.0"
  implementation "com.googlecode.juniversalchardet:juniversalchardet:$universalCharDetVersion"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
  implementation "me.jessyan:retrofit-url-manager:$urlManager"
  implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion"
  implementation "com.jakewharton:butterknife:$butterKnifeVersion"
  implementation "com.jakewharton.timber:timber:$timberVersion"
  implementation "androidx.cardview:cardview:1.0.0"
  implementation "androidx.annotation:annotation:1.2.0"

  releaseImplementation("com.github.stephanenicolas.toothpick:toothpick-runtime:$toothPickVersion") {
    exclude group: 'javax.inject'
  }
  releaseImplementation("com.github.stephanenicolas.toothpick:smoothie:$toothPickVersion") {
    exclude group: 'javax.inject'
  }

  debugImplementation("com.github.stephanenicolas.toothpick:toothpick-runtime:$toothPickVersion")

  releaseImplementation "com.github.stephanenicolas.toothpick:toothpick-javax-annotations:$toothPickVersion"
  kapt "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothPickVersion"

  implementation "com.squareup.moshi:moshi-kotlin:$moshiKotlinVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
  implementation "net.danlew:android.joda:$jodaTimeVersion"
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation 'com.google.android:flexbox:1.1.0'
  implementation 'com.henryblue.library:tvrecyclerview:1.2.2'
  implementation 'jp.wasabeef:recyclerview-animators:3.0.0'

  implementation('com.github.rstanic12:Resourceful:1.0.0') {
    exclude group: 'com.google.guava'
  }

  // https://mvnrepository.com/artifact/org.simpleframework/simple-xml
  implementation("org.simpleframework:simple-xml:$simpleXmlVersion") {
    exclude group: 'stax'
    exclude group: 'xpp3'
  }

  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
  testImplementation "org.apache.commons:commons-lang3:$commonsLangVersion"

  testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
  testImplementation "commons-io:commons-io:$commonsioVersion"
  testImplementation "com.github.stephanenicolas.toothpick:toothpick-testing:$toothPickVersion"
  testImplementation("org.robolectric:robolectric:$robolectricVersion") {
    exclude module: 'support-v4'
  }
  testImplementation("com.squareup.assertj:assertj-android:$assertJAndroidVersion") {
    exclude module: 'support-v4'
    exclude module: 'support-annotations'
  }

  testImplementation "com.willowtreeapps.assertk:assertk-jvm:$assertkVersion"
  testImplementation "org.assertj:assertj-core:$assertjVersion"
  testImplementation "junit:junit:$junitVersion"
  testImplementation "org.robolectric:shadows-framework:$robolectricVersion@jar"
  testImplementation "org.robolectric:shadowapi:$robolectricVersion"
  testImplementation "org.robolectric:shadows-playservices:$robolectricVersion"
  testImplementation "androidx.test:core:1.4.0"
  testImplementation "org.khronos:opengl-api:$openglApiVersion"
  testImplementation "org.mockito:mockito-core:$mockitoVersion"
  testImplementation 'androidx.test.ext:junit:1.1.3'

  kaptTest "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothPickVersion"

  kapt "com.github.moxy-community:moxy-compiler:$moxyVersion"
  kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
}

com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true

jacoco {
   toolVersion = "0.8.7"
}

tasks.withType(Test) {
  jacoco.includeNoLocationClasses = true
  jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*MemberInjector.*',
                    '**/*$$Factory*.*', '**/*..State*.*', '**/*_ViewBinding*.*', 'com/bumptech/**/*.*', '**/injection/**/*.*',
                    '**/*__Factory*.*', '**/*PresenterBinder*.*', '**/*ViewState*.*']
  def mainSrc = "${project.projectDir}/src/main/java"
  def kotlinSrc = "${project.projectDir}/src/main/kotlin"

  classDirectories.setFrom(fileTree(
          dir: "$buildDir/intermediates/javac/debug/classes",
          excludes: fileFilter) + fileTree(
          dir: "$buildDir/tmp/kotlin-classes/debug",
          excludes: fileFilter))

  // sources
  sourceDirectories.setFrom(files([
          mainSrc,
          kotlinSrc
  ]))

  executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))
}
